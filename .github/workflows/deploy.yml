name: Deploy Accessory Bar

on:
  push:
    branches:
      - master
jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Test
        run: npm run build --if-present
      - run: npm test --if-present
        env:
          CI: true
  build:
    runs-on: ubuntu-20.04
    name: Build and Push Docker Image to Github Packages
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Push to github packages
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: jackjttech/accessory_bar/latest
          dockerfile: ./Dockerfile
          tag_with_ref: true
  stage:
    runs-on: ubuntu-20.04
    name: Deploy to staging
    needs:
      - test
      - build
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.KNOWN_HOSTS }}#
      - name: Sync docker compose file
        run: rsync ./docker-compose-staging.yml ubuntu@3.138.185.151:/home/ubuntu
      - name: Remove compose file
        run: ssh -t ubuntu@3.138.185.151 sudo rm docker-compose.yml
      - name: Rename compose file
        run: ssh -t ubuntu@3.138.185.151 sudo mv docker-compose-staging.yml docker-compose.yml
      - name: Sync nginx default conf
        run: rsync nginx/staging/default.conf ubuntu@3.138.185.151:/home/ubuntu/nginx/default.conf
      - name: Log into docker
        run: ssh -t ubuntu@3.138.185.151 sudo docker login https://docker.pkg.github.com -u ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }}
      - name: Get latest docker images
        run: ssh -t ubuntu@3.138.185.151 sudo docker-compose pull
      - name: Docker down anything already running
        run: ssh -t ubuntu@3.138.185.151 sudo docker-compose down -v
      - name: Docker up
        run: ssh -t ubuntu@3.138.185.151 sudo docker-compose up -d
      - name: Docker check
        run: ssh -t ubuntu@3.138.185.151 sudo docker-compose ps
  # production:
  #   runs-on: ubuntu-20.04
  #   name: Deploy to production
  #   needs: stage
  #   steps:
  #     - name: log into server
  #       env:
  #         SERVER: production
# rollback:
#   runs-on: ubuntu-20.04
#   name: Rollback in case of failure
#   needs: production
#   steps:
#     - name: log into server
#       env:
#         Server: production
