name: Deploy Accessory Bar

on:
  push:
    branches:
      - master
jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Test
        run: npm run build --if-present
      - run: npm test --if-present
        env:
          CI: true
  build:
    runs-on: ubuntu-20.04
    name: Build and Push Docker Image to Github Packages
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: jackjttech/accessory_bar/latest
          dockerfile: ./Dockerfile
          tag_with_ref: true
          # - name: Login to github Packages
          #   uses: docker/login-action@v1
          #   with:
          #     username: ${{ github.actor }}
          #     password: ${{ secrets.GITHUB_TOKEN }}
          #     registry: docker.pkg.github.com
          #     tag_with_ref: true
          # - name: Push to github Packages
          #   uses: docker/build-push-action@v2
          #   with:
          #     push: true
          #     context: .
          #     file: ./Dockerfile
          #     tags: docker.pkg.github.com/jackjttech/accessory_bar:latest
          #     registry: docker.pkg.github.com
          #   env:
          CI: true
# stage:
#   runs-on: ubuntu-20.04
#   name: Deploy to staging
#   needs: build
#   steps:
#     - name: Log into server
#       env:
#         SERVER: staging
# production:
#   runs-on: ubuntu-20.04
#   name: Deploy to production
#   needs: stage
#   steps:
#     - name: log into server
#       env:
#         SERVER: production
# rollback:
#   runs-on: ubuntu-20.04
#   name: Rollback in case of failure
#   needs: production
#   steps:
#     - name: log into server
#       env:
#         Server: production
